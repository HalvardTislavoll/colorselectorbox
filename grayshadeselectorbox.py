#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.6
#  in conjunction with Tcl version 8.6
#    Nov 09, 2020 04:02:12 PM CET  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import grayshadeselectorbox_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    grayshadeselectorbox_support.set_Tk_var()
    top = Toplevel1 (root)
    grayshadeselectorbox_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    grayshadeselectorbox_support.set_Tk_var()
    top = Toplevel1 (w)
    grayshadeselectorbox_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("410x191+794+355")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(0,  0)
        top.title("select gray shade")
        top.configure(highlightcolor="black")

        self.Scale1 = tk.Scale(top, from_=0.0, to=100.0)
        self.Scale1.place(x=6, y=86, height=42, width=274)
        self.Scale1.configure(activebackground="#f9f9f9")
        self.Scale1.configure(command=grayshadeselectorbox_support.on_scale)
        self.Scale1.configure(orient="horizontal")
        self.Scale1.configure(troughcolor="#d9d9d9")
        self.Scale1.configure(variable=grayshadeselectorbox_support.scale)

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(x=2, y=2, height=85, width=115)
        self.Frame1.configure(relief='flat')
        self.Frame1.configure(borderwidth="2")

        self.lbl_1 = tk.Label(self.Frame1)
        self.lbl_1.place(x=2, y=6, height=21, width=50)
        self.lbl_1.configure(activebackground="#f9f9f9")
        self.lbl_1.configure(anchor='e')
        self.lbl_1.configure(foreground="grey50")
        self.lbl_1.configure(text='''Red:''')

        self.lbl_2 = tk.Label(self.Frame1)
        self.lbl_2.place(x=2, y=32, height=21, width=50)
        self.lbl_2.configure(activebackground="#f9f9f9")
        self.lbl_2.configure(anchor='e')
        self.lbl_2.configure(foreground="grey50")
        self.lbl_2.configure(text='''Green:''')

        self.lbl_3 = tk.Label(self.Frame1)
        self.lbl_3.place(x=2, y=60, height=21, width=50)
        self.lbl_3.configure(activebackground="#f9f9f9")
        self.lbl_3.configure(anchor='e')
        self.lbl_3.configure(foreground="grey50")
        self.lbl_3.configure(text='''Blue:''')

        self.lbl_red = tk.Label(self.Frame1)
        self.lbl_red.place(x=65, y=6, height=21, width=39)
        self.lbl_red.configure(activebackground="#f9f9f9")
        self.lbl_red.configure(background="#e9e9e9")
        self.lbl_red.configure(relief="sunken")
        self.lbl_red.configure(text='''Label''')

        self.lbl_green = tk.Label(self.Frame1)
        self.lbl_green.place(x=65, y=33, height=21, width=39)
        self.lbl_green.configure(activebackground="#f9f9f9")
        self.lbl_green.configure(background="#e9e9e9")
        self.lbl_green.configure(relief="sunken")
        self.lbl_green.configure(text='''Label''')

        self.lbl_blue = tk.Label(self.Frame1)
        self.lbl_blue.place(x=65, y=60, height=21, width=39)
        self.lbl_blue.configure(activebackground="#f9f9f9")
        self.lbl_blue.configure(background="#e9e9e9")
        self.lbl_blue.configure(relief="sunken")
        self.lbl_blue.configure(text='''Label''')

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(x=0, y=132, width=410)

        self.Frame2 = tk.Frame(top)
        self.Frame2.place(x=117, y=4, height=78, width=157)
        self.Frame2.configure(relief='flat')
        self.Frame2.configure(borderwidth="2")

        self.lbl_4 = tk.Label(self.Frame2)
        self.lbl_4.place(x=45, y=3, height=21, width=68)
        self.lbl_4.configure(activebackground="#f9f9f9")
        self.lbl_4.configure(foreground="grey50")
        self.lbl_4.configure(text='''Selection:''')

        self.lbl_hex = tk.Label(self.Frame2)
        self.lbl_hex.place(x=38, y=31, height=21, width=80)
        self.lbl_hex.configure(activebackground="#f9f9f9")
        self.lbl_hex.configure(background="#e9e9e9")
        self.lbl_hex.configure(relief="sunken")
        self.lbl_hex.configure(text='''Label''')

        self.lbl_python_color = tk.Label(self.Frame2)
        self.lbl_python_color.place(x=10, y=58, height=21, width=139)
        self.lbl_python_color.configure(activebackground="#f9f9f9")
        self.lbl_python_color.configure(text='''Label''')

        self.lbl_color = tk.Label(top)
        self.lbl_color.place(x=284, y=6, height=120, width=120)
        self.lbl_color.configure(activebackground="#f9f9f9")
        self.lbl_color.configure(background="#f9f9f9")
        self.lbl_color.configure(relief="sunken")
        self.lbl_color.configure(text='''Label''')

        self.btn_ok = tk.Button(top)
        self.btn_ok.place(x=48, y=143, height=33, width=110)
        self.btn_ok.configure(activebackground="#f9f9f9")
        self.btn_ok.configure(command=grayshadeselectorbox_support.on_btn_ok)
        self.btn_ok.configure(text='''OK''')

        self.btn_cansel = tk.Button(top)
        self.btn_cansel.place(x=254, y=143, height=33, width=110)
        self.btn_cansel.configure(activebackground="#f9f9f9")
        self.btn_cansel.configure(command=grayshadeselectorbox_support.on_btn_cansel)
        self.btn_cansel.configure(text='''Cancel''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

if __name__ == '__main__':
    vp_start_gui()





